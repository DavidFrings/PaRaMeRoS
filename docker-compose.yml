services:
  db:
    image: cgr.dev/chainguard/postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    image: ghcr.io/davidfrings/parameros-api:latest
    environment:
      - HOST=${HOST}
      - PORT=8080
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=${JWT_EXPIRE}
      - ADMIN_PASS=${ADMIN_PASS}
      - RUST_LOG=info
    ports:
      - "${API_PORT}:8080"
    volumes:
      - uploads:/api/uploads
    depends_on:
      db:
        condition: service_healthy
    # Not working because of Chainguard image limitations (no shell)
    #healthcheck:
    #  test: ["CMD", "curl -f http://127.0.0.1:8080/health"]
    #  interval: 10s
    #  timeout: 5s
    #  retries: 5
    restart: unless-stopped

  frontend:
    image: ghcr.io/davidfrings/parameros-frontend:latest
    environment:
      - VITE_NAME="${NAME}"
      - VITE_DESC="${DESC}"
      - VITE_KEYWORDS="${KEYWORDS}"
      - VITE_API="${API_SITE_NAME}"
    ports:
      - "${FRONTEND_PORT}:80"
    volumes:
      - uploads:/usr/share/nginx/html/uploads
    depends_on:
      - api
      #api:
      #  condition: service_healthy
    restart: unless-stopped

volumes:
  db:
  uploads:
